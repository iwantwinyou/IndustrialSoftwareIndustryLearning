程序名: lpqtconnPLC
功能说明: PLC通信模块。
     1、实现和PLC之间的数据发送、接收等操作
	 2、PLC相关配置内容自动从 "./lpIPUConfig/lpPLCConfig.json" 读取使用
	 3、内置定时器: 心跳(1s)、请求数据统计(默认1s,根据配置)、请求PLC状态(默认1s,根据配置)、断线重连(3s)、守护监测(1分钟)
	 4、内置逻辑包括：
	   (1) 断线自动开启重连定时器;
	   (2) 断线自动停止心跳、请求计数、请求状态、守护时钟
	   (3) 连线自动启动心跳、请求计数、请求状态、守护时钟
	   (4) 使用一发一收逻辑: 即发送PLC数据后，只有收到应答才会进行下一次发送
	   (5) 设置发送缓存队列，用于解决短时间内收到大量需发送PLC的命令，缓存队列采用先进先出原则。
	   (6) 心跳计数0~65535, 且心跳支持插队(即查到缓存队列的第一个)，且心跳到时，若上一轮心跳未发送，则更新心跳。
	        举例: 发送plc的心跳计数为 1，2，3，(异常)，10，11
	   (7) 请求计数、请求状态设置标记，即上一轮为成功应答时，不添加新一轮的对应请求
	   (8) qna3e协议中最大的问题时,应答包内没有cmd标记,因此无法识别是什么命令的应答。
	       本次设计采用一应一答+cmd标记模式，从逻辑层解决协议层不能识别命令的问题。
		   注: 老版软件是根据请求数量来识别。当请求数量一样时，就会出问题。
	   (9) 接收的数据进行内容解析，添加数据容错逻辑：冗余数据、拆分包等
	   (10)支持多种解析模式, key型(一般用于计数), reg型(一般用于plc状态)，自定义型(panel)
	   (11)通过send_ 和 read_ 区分命令为发送数据还是请求数据
	   (12)内置线程运行,线程优先级 6
	   (13)设置plc数据打印开关 "b_print"
	   (14)keys的配置注意, 用"-"隔开。
	       如"total-sum", 在统计信息中，对应 total 行，sum列的值
		   如"total-sum-h",在统计信息中，对应 total 行，sum列的值高16位
		   如"total-sum-l",在统计信息中，对应 total 行，sum列的值低16位，val = (H<<16 + L)

相关文件: lpqtconnPLC.dll
依赖库：
	Qt5Core.dll
	Qt5Network.dll

V1.0.1.0	2023-08-26
 1、初版。

V1.0.2.0	2023-08-29
 1、修复PLC状态同步时，发送了空的数据
 2、优化打印信息

V1.0.3.0	2023-09-22
 1、优化请求PLC状态返回的数据接口，适用更多应用场景，且空数据也需发送
   void sgResultStatus(QVariantList lst) -> void sgResultStatus(QVariantMap vm);// <key, status_txt>
 2、新增接口
   sgSendDataEx
   sgReadData
   fun_getCurTime
   fun_ints2HexStr
   fun_str2HexStr
 3、内部数据read解析新增支持如下：（具体看wiki文档）
   支持通用的reg型解析
   支持通用的diy型解析
   支持无解析输出
   
V1.0.4.0	2023-12-19
  1、增加心跳长时间未应答报警.
   (1) 发出的报警信号 void sgWarnHeartbeatOut(int t_out); // t_out表示断开时长
   (2) 功能配置文件 "./lpIPUConfig/lpPLCConfig.json"
   (3) 配置示例
   {
		"config":{
			...
			"t_heartbeat_out_warn": 0 // 单位：秒 >1表示断开多久进行报警。<=1表示关闭
		},
   }

V1.0.5.0	2023-02-06
  1、优化队列缓冲逻辑
   (1) 来新的数据时,先检索队列中cmd,有则替换data,无则按原规则添加；
   (2) 此方案解决了当PLC未连接时,发送队列不断变大的问题。
  2、新增接口sgUpdateConfig,用于更新部分PLC参数，如打印等。
  3、优化PLC连接逻辑，ip为空时不进行连接，心跳等定时器操作自动停止。
   (1) 注: PLC未连接时，也会对发送数据进行缓存，再连接恢复时发送。

